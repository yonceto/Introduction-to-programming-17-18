#include<iostream>
#include<stdio.h>
#include<stdlib.h>
#include<algorithm>
#include<math.h>
using namespace std;
//Function to calculate steps for pouring K-litres of water into container N or container M
int calculateSteps(int N, int M, int K)
{
	int a = N;
	int b = 0;
	int temp;
	int count = 1;
	while (a != K && b != K)
	{
		temp = min(a, M - b);
		a -= temp;
		b += temp;
		count++;
		if (a == K || b == K)
			break;
		if (a == 0)
		{
			a = N;
			count++;
		}
		if (b == M)
		{
			b = 0;
			count++;
		}
	}
	return count;
}
//Function to calculate greatest common divisor
int greatestCommonDivisor(int a, int b) {
	if (b == 0) {
		return a;
	}
	return greatestCommonDivisor(b, a % b);
}
int main()
{

	int n = 0;
	int m = 0;
	int k = 0;
	int firstCalc = 0;
	int secondCalc = 0;
	cout << "Enter amount of first container: " << endl;
	cin >> n;
	cout << "Enter amount of second container: " << endl;
	cin >> m;
	cout << "Enter amount of water to pour into one of the containers: " << endl;
	cin >> k;
	//Check user input to be between 1 and 20
	//If input is not valid print message and -1
	if (1 > n || 1 > m || n > 20 || m > 20) {
		cout << "Wrong input, must be between 1 and 20 litres" << endl;
	}
	//If input is valid continue
	if (k > max(n, m) || k % greatestCommonDivisor(n, m) != 0)
	{
		cout << "-1\n";
	}
	if (k == n || k == m) {
		cout << "1\n";
	}
	//Calculate steps for first and second container
	firstCalc = calculateSteps(n, m, k);
	secondCalc = calculateSteps(m, n, k);
	//Finds the minimum of the two calculations
	cout << min(firstCalc, secondCalc) << endl;
	return 0;
}
